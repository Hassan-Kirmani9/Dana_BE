# Generated by Django 4.2.4 on 2025-04-09 07:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CounterPacking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('filled_percentage', models.FloatField(default=0.0)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_packings', to='dana_app.container')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('its', models.CharField(max_length=8)),
                ('full_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(blank=True, max_length=20, null=True)),
                ('whatsapp_number', models.CharField(blank=True, max_length=20, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=254, null=True)),
                ('mohalla', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Miqaat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miqaat_name', models.CharField(max_length=255)),
                ('miqaat_date', models.DateField()),
                ('hijri_date', models.CharField(blank=True, max_length=50, null=True)),
                ('miqaat_type', models.CharField(choices=[('general_miqaats', 'General Miqaats'), ('private_events', 'Private Events'), ('ramadan', 'Ramadan')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('thaals_polled', models.PositiveIntegerField(default=0)),
                ('thaals_cooked', models.PositiveIntegerField(default=0)),
                ('thaals_served', models.PositiveIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MiqaatZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('miqaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miqaat_zones', to='dana_app.miqaat')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miqaat_zones', to='dana_app.zone')),
            ],
        ),
        migrations.CreateModel(
            name='MiqaatMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miqaat_menus', to='dana_app.menu')),
                ('miqaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='miqaat_menus', to='dana_app.miqaat')),
            ],
        ),
        migrations.CreateModel(
            name='MiqaatAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checkin_time', models.TimeField()),
                ('checkout_time', models.TimeField()),
                ('counter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='dana_app.counter')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='dana_app.member')),
                ('miqaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='dana_app.miqaat')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='dana_app.zone')),
            ],
        ),
        migrations.AddField(
            model_name='member',
            name='miqaat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='dana_app.miqaat'),
        ),
        migrations.AddField(
            model_name='member',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='dana_app.zone'),
        ),
        migrations.CreateModel(
            name='LeftOverDegs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_cooked', models.PositiveIntegerField(default=0)),
                ('total_received', models.PositiveIntegerField(default=0)),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leftover_degs', to='dana_app.container')),
                ('menu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leftover_degs', to='dana_app.menu')),
                ('miqaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leftover_degs', to='dana_app.miqaat')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leftover_degs', to='dana_app.unit')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leftover_degs', to='dana_app.zone')),
            ],
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ibadullah_count', models.PositiveIntegerField(default=0)),
                ('mumin_count', models.PositiveIntegerField(default=0)),
                ('counter_packing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='dana_app.counterpacking')),
                ('miqaat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='dana_app.miqaat')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='dana_app.zone')),
            ],
        ),
        migrations.AddField(
            model_name='counterpacking',
            name='miqaat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_packings', to='dana_app.miqaat'),
        ),
        migrations.AddField(
            model_name='counterpacking',
            name='miqaat_menu',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_packings', to='dana_app.miqaatmenu'),
        ),
        migrations.AddField(
            model_name='counterpacking',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_packings', to='dana_app.unit'),
        ),
        migrations.AddField(
            model_name='counterpacking',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counter_packings', to='dana_app.zone'),
        ),
        migrations.AddField(
            model_name='counter',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='counters', to='dana_app.zone'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
